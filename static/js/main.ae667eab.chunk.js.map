{"version":3,"sources":["redux/dialogs-reducer.jsx","API/Api.js","components/Users/Users.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.jsx","redux/auth-reducer.jsx","components/Login/Login.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","Utils/object-helpers.js","redux/users-reduser.jsx","assets/images/user.png","components/Users/User.jsx","components/common/Paginator/Paginators.jsx","components/Users/Users.jsx","redux/users-selectors.jsx","components/Users/UsersContainer.jsx","redux/app-reducer.jsx","redux/redux-store.js","HOC/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.jsx","assets/images/sEKwt.gif","components/common/Preloader/Preloader.js","Utils/validators.jsx","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reduser.jsx"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","authAPI","me","login","email","password","rememberMe","logout","getStatus","updateStatus","status","put","module","exports","Navbar","props","className","s","nav","button","to","activeClassName","active","SET_USER_DATA","isAuth","setAuthUserData","payload","getAuthUserData","dispatch","a","resultCode","authReducer","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","createField","required","Input","error","styles","formSummaryError","connect","auth","length","stopSubmit","_error","formData","Header","header","src","loginBlock","onClick","HeaderContainer","this","React","Component","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingIsProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","fake","followed","count","filter","User","user","photos","small","userPhoto","disabled","some","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","p","cn","selectedPage","pageNumber","e","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingIsProgress","UsersContainer","requestUsers","Preloader","compose","bind","page","totalCount","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","FormControl","input","meta","touched","child","hasError","formControl","children","restProps","Textarea","placeholder","validators","component","text","validate","style","backgroundColor","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","addPostCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.ae667eab.chunk.js","sourcesContent":["\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hdsfgvbdfbvdfi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yfdghdfgdsfgvo'},\r\n        {id: 4, message: 'Yofdb dfgbdrb'},\r\n        {id: 5, message: 'Y ergdrbo'}\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n   /* let stateCopy = {\r\n        ...state,\r\n        /!*messages: {...state.messages}*!/\r\n    }*/\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer\r\n\r\n\r\n\r\n","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"e1d5b4ab-8982-448a-9617-beba16be2e07\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage=1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n\r\n    },\r\n\r\n    getProfile (userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    me () {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login (email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout () {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfile (userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus (userId) {\r\n        return instance.get('profile/status/' + userId)\r\n    },\r\n    updateStatus (status) {\r\n        return instance.put('profile/status/', {status:status})\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\nconst getUsers = (currentPage, pageSize) => {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => {\r\n            return response.data}\r\n        )\r\n}\r\n\r\nexport default getUsers\r\n*/\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1eDhb\",\"selectedPage\":\"Users_selectedPage__2POqJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2viZF\",\"button\":\"Navbar_button__3zc3R\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n\r\n    /*let friends = [\r\n        {id: 1, name: 'Olga'},\r\n        {id: 2, name: 'Sveta'},\r\n        {id: 3, name: 'Anna'},\r\n    ]*/\r\n\r\n/*  let friendsElements = props.store.friends.map( f => <Friend name={f.name} id={f.id}/>);*/\r\n\r\n    /*let dialogsElements =  props.state.dialogs.map( d => <DialogItem name={d.name} id={d.id} /> );*/\r\n\r\n\r\n    /*/!**!/let friends = [\r\n        {id: 1, name: 'Olga'},\r\n        {id: 2, name: 'Sveta'},\r\n        {id: 3, name: 'Anna'},\r\n        {id: 4, name: 'Alina'},\r\n    ]/!**!/*/\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.button}>\r\n                <NavLink to=\"/profile\" activeClassName={s.button.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.button}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.button.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.button}>\r\n                <NavLink to=\"/users\" activeClassName={s.button.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.button}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.button}>\r\n                <a>Settings</a>\r\n            </div>\r\n           {/*<div className={s.item}>\r\n                <a>Friends</a></div>\r\n            <div>\r\n                <Friend state={props.state.friends}/>\r\n                { friendsElements }\r\n            </div>*/}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import {authAPI} from \"../API/Api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: 'SET_USER_DATA',\r\n    payload: {userId, email, login, isAuth} })\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n                if (response.data.resultCode === 0) {\r\n                    let {id, login, email} = response.data.data;\r\n                    dispatch(setAuthUserData(id, email, login, true))\r\n                }\r\n}\r\n\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages [0] : \"Some error\"\r\n            dispatch(stopSubmit(\"login\", {_error: message}))\r\n        }\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n   let response = await authAPI.logout()\r\n\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setAuthUserData(null, null, null, false))\r\n                }\r\n}\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../Utils/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router\";\r\nimport styles from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\n\r\n\r\nconst LoginForm= (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"remember me\", [required], Input, {type: \"checkbox\"}, \"remember me\")}\r\n            {props.error && <div className={styles.formSummaryError}>\r\n               {props.error}\r\n           </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm( {form: 'login'} ) (LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={ onSubmit}/>\r\n    </div>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login} ) (Login)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Login from \"../Login/Login\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n     <div> <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' /> </div>\r\n        <div>Бобро пожаловать!</div>\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth ? <div>{props.login} – <button onClick={props.logout}>Log out</button></div>\r\n             : <NavLink to={'/login'}>Login</NavLink>}\r\n\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout}) (HeaderContainer)","\r\n\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    items.map( u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    })\r\n}","import React from \"react\";\r\nimport {usersAPI} from \"../API/Api\";\r\nimport {updateObjectInArray} from \"../Utils/object-helpers\";\r\n\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingIsProgress: [],\r\n\r\n\r\n}\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"FAKE\":\r\n            return {...state, fake:state.fake + 1}\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n                return {...state, currentPage: action.currentPage}\r\n        }\r\n\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {...state,\r\n                followingIsProgress: action.isFetching\r\n                    ? [...state.followingIsProgress, action.userId]\r\n                    : state.followingIsProgress.filter(id => id != action.userId)}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: 'FOLLOW', userId: userId })\r\nexport const unfollowSuccess = (userId) => ({type: 'UNFOLLOW', userId: userId })\r\nexport const setUsers = (users) => ({type: 'SET_USERS', users: users })\r\nexport const setCurrentPage = (currentPage) => ({type: 'SET_CURRENT_PAGE',currentPage: currentPage })\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: 'SET_USERS_TOTAL_COUNT', count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type:'TOGGLE_IS_FETCHING', isFetching })\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({type:'TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setUsersTotalCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\n\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, followSuccess,usersAPI.follow.bind(usersAPI) )\r\n} }\r\n\r\nexport const unfollow = (userId) => {\r\n        return async (dispatch) => {\r\n            followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n        }\r\n}\r\n\r\n\r\nexport default usersReducer;","export default __webpack_public_path__ + \"static/media/user.28d1bc6b.png\";","import React from 'react';\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user, followingIsProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingIsProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingIsProgress.some(id => id === user.id)}\r\n                                      onClick={() => { follow(user.id) }}>\r\n                                Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n        </div>)\r\n}\r\n\r\nexport default User\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport User from \"./User\";\r\nimport Paginator from \"../common/Paginator/Paginators\";\r\n\r\n\r\nconst Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n\r\n    return <div>\r\n\r\n        <Paginator currentPage={currentPage}\r\n                   onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount}\r\n                   pageSize={pageSize}\r\n        />\r\n\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingIsProgress={props.followingIsProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n\r\n        </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector( getUsersSelector, (users) => {\r\n    return users.filter(u => true)\r\n    })\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingIsProgress = (state) => {\r\n    return state.usersPage.followingIsProgress\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    let count = 23\r\n    return count\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleIsFollowingProgress,\r\n    requestUsers,\r\n} from \"../../redux/users-reduser\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingIsProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers,\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props\r\n      this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                      pageSize={this.props.pageSize}\r\n                      currentPage={this.props.currentPage}\r\n                      onPageChanged={this.onPageChanged}\r\n                      users={this.props.users}\r\n                      follow={this.props.follow}\r\n                      unfollow={this.props.unfollow}\r\n                      followingIsProgress={this.props.followingIsProgress}\r\n\r\n        />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n/*let mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingIsProgress: state.usersPage.followingIsProgress,\r\n    }\r\n}*/\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingIsProgress: getFollowingIsProgress(state),\r\n    } }\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage,\r\n        toggleIsFollowingProgress,\r\n        requestUsers}),\r\n    /*withAuthRedirect*/\r\n)(UsersContainer)\r\n\r\n\r\n\r\n","\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: 'INITIALIZED_SUCCESS'})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    //dispatch(somethingelse());\r\n    //dispatch(somethingelse());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reduser\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reduser\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n    /*sidebarReducer: sidebarReducer*/\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers (applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\n\r\n/*let store = createStore(reducers, applyMiddleware(thunkMiddleware));*/\r\n\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />} >\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\"\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./HOC/withSuspense\";\r\nconst DialogsContainer = React.lazy(() => import ('./components/Dialogs/DialogsContainer'))\r\nconst ProfileContainer = React.lazy(() =>import (\"./components/Profile/ProfileInfo/ProfileContainer\"))\r\n\r\n\r\nclass App extends React.Component {\r\n    \r\n      componentDidMount() {\r\n               this.props.initializeApp();\r\n           }\r\n    render() {\r\n          if (!this.props.initialized)  {\r\n              return <Preloader />\r\n          }\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar /*state={props.state.sidebar}*//>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                           render={withSuspense(DialogsContainer)}/>\r\n\r\n                    <Route path='/profile/:userId?'\r\n                           render={withSuspense(ProfileContainer)} />\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n                    <Route path='/login'\r\n                           render={() => <Login/>}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n const mapStateToProps = (state) => ({\r\n     initialized: state.app.initialized\r\n })\r\n\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp})) (App)\r\n\r\n\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <Provider store={store}>\r\n            <AppContainer />\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport SamuraiJSApp from \"./App\";\n\n\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n\n\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../Utils/validators\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, child, ...props}) => {\r\n\r\n    const hasError = touched && error\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \" \")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport default Textarea\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\" ) =>\r\n    <div>\r\n    <Field placeholder={placeholder}\r\n           name={name}\r\n           validate={validators}\r\n           component={component}\r\n        {...props}/> {text}\r\n    </div>\r\n","export default __webpack_public_path__ + \"static/media/sEKwt.bbf51213.gif\";","import preloader from \"../../../assets/images/sEKwt.gif\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return<div style={ {backgroundColor: 'white'} }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\n\r\nexport default Preloader","\r\n\r\nexport const required = value => {\r\n    if (value) return undefined\r\n\r\n    return \"Field is required\"\r\n\r\n}\r\n\r\nexport  const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is $ {maxLength} symbols`\r\n    return undefined\r\n}\r\n\r\n/*export const maxLength = value => {\r\n    if (value && value.leading > 30 ) return \"Max length is 30 symbols\"\r\n    return undefined\r\n}*/\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3MLrL\",\"error\":\"FormsControls_error__1RUJB\",\"formSummaryError\":\"FormsControls_formSummaryError__vShTd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__EwcK8\",\"paginator\":\"Paginator_paginator__3OM_Y\",\"pageNumber\":\"Paginator_pageNumber__1HZrj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3X4EN\",\"loginBlock\":\"Header_loginBlock__2g8g8\"};","import {profileAPI, usersAPI} from \"../API/Api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\n\r\nlet initialState = {\r\n        posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla ijokokok', likesCount: 9},\r\n        {id: 4, message: 'Dakmmllkda', likesCount: 11}\r\n    ],\r\n\r\n        profile: null,\r\n        status: \"\"\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 2,\r\n            };\r\n            return  {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: '',\r\n            }\r\n    }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n               profile: action.profile\r\n            }\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n        } }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addPostCreator = (newPostText) => ({type: 'ADD_POST', newPostText})\r\nexport const setUserProfile = (profile) => ({type: \"SET_USER_PROFILE\", profile})\r\nexport const setStatus = (status) => ({type: \"SET_STATUS\", status})\r\nexport const deletePost = (postId) => ({type: \"DELETE_POST\", postId})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n\r\n            if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))}\r\n}\r\n\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}