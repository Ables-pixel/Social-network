{"version":3,"sources":["HOC/AuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWhithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileInfo/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","name","aboutMe","contacts","facebook","website","vk","instagram","twitter","youtube","github","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostForm","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","reduxForm","form","MyPosts","memo","postsElements","posts","map","p","postsBlock","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostCreator","Profile","ProfileContainer","userId","match","params","autorizedUserId","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.f97d2294.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock___i8_W\",\"i\":\"ProfileInfo_i__1ns1P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3QTi0\",\"posts\":\"MyPosts_posts__1kVIr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3CJVj\"};","import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState( {\r\n            editMode: true\r\n            })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState( {\r\n            editMode: false\r\n        } )\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status) {\r\n        this.setState({\r\n            status: this.props.status\r\n        }) }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { !this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-----\"}</span>\r\n                </div>\r\n                    }\r\n                { this.state.editMode &&\r\n                    <div>\r\n                        <input\r\n                            onChange={this.onStatusChange}\r\n                            autoFocus={true}\r\n                            onBlur={this.deactivateEditMode}\r\n                            value={this.props.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileStatus","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState({})\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n            <div>\r\n                { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n                </div>\r\n                }\r\n                { editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        onBlur={deactivateEditMode}\r\n                        autoFocus={true}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWhithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\ndebugger;\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <div><ProfileStatusWithHooks status={status}\r\n                updateStatus={updateStatus}/></div>\r\n                <div>\r\n                    <b>Name: {profile.name} </b>\r\n                    </div>\r\n                <div>\r\n                    <b>About me: </b> {profile.aboutMe}\r\n                </div>\r\n                <div>\r\n                    <b>Contacts: </b>\r\n                    facebook: {profile.contacts.facebook}<br/>\r\n                    website: {profile.contacts.website}<br/>\r\n                    vk: {profile.contacts.vk}<br/>\r\n                    instagram: {profile.contacts.instagram}<br/>\r\n                    twitter: {profile.contacts.twitter}<br/>\r\n                    youtube: {profile.contacts.youtube}<br/>\r\n                    github: {profile.contacts.github}<br/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n/*\r\nconst Contacts = (props) => {\r\n    return (\r\n    <div>\r\n    facebook: {props.profile.contacts.facebook},\r\n    website: {props.profile.contacts.website},\r\n\r\n    </div>\r\n    )\r\n}\r\n*/\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/validators\";\r\nimport Textarea from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}> />\r\n            <div>\r\n                <Field name=\"newPostText\"\r\n                       component={Textarea}\r\n                       placeholder={\"Post message\"}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: \"ProfileAddNewPostForm\"}) (AddNewPostForm)\r\n\r\n\r\nconst MyPosts = React.memo (props => {\r\n\r\n\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts:</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n} )\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostCreator, updateNewPostTextCreator} from \"../../../redux/profile-reduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n/*const MyPostsContainer = (props) => {\r\n    /!*let state = props.store.getState();*!/\r\n\r\n    return <StoreContext.Consumer>\r\n        { store => {\r\n                let state = store.getState();\r\n                let addPost = () => {\r\n                    store.dispatch(addPostCreator());\r\n                }\r\n\r\n                let onPostChange = (text) => {\r\n                    let action = updateNewPostTextCreator(text);\r\n                    store.dispatch(action);\r\n                }\r\n\r\n                return <MyPosts updateNewPostText={onPostChange}\r\n                                addPost={addPost}\r\n                                posts={state.profilePage.posts}\r\n                                newPostText={state.profilePage.newPostText}\r\n                />\r\n            }\r\n        }\r\n\r\n        </StoreContext.Consumer>\r\n\r\n    }*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch (addPostCreator(newPostText))\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts)\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"../Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../../redux/profile-reduser\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../../HOC/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n     let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n\r\n                      aboutMe={this.props.profile}\r\n                         contacts={this.props.profile}\r\n\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport  default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}